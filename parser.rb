#
# DO NOT MODIFY!!!!
# This file is automatically generated by Racc 1.4.12
# from Racc grammer file "".
#

require 'racc/parser.rb'

  require "lexer"
  require "nodes"

class Parser < Racc::Parser

module_eval(<<'...end grammar.y/module_eval...', 'grammar.y', 164)
  def parse(code, show_tokens=false)
    @tokens = Lexer.new.run(code)
    p @tokens if show_tokens
    do_parse
  end

  def next_token
    @tokens.shift
  end
...end grammar.y/module_eval...
##### State transition tables begin ###

racc_action_table = [
    28,    30,    25,    26,    27,    49,    32,    22,    23,    30,
    15,    16,    17,    18,    19,    20,    24,    92,    96,    21,
    91,    30,    30,    83,    50,   101,    31,    73,    30,    95,
   106,    25,    26,    27,    31,    14,    22,    23,    32,    15,
    16,    17,    18,    19,    20,    24,    31,    31,    21,    25,
    26,    27,    79,    31,    22,    23,    56,    15,    16,    17,
    18,    19,    20,    24,    14,    32,    21,    25,    26,    27,
    54,    47,    22,    23,    46,    15,    16,    17,    18,    19,
    20,    24,    14,    53,    21,    25,    26,    27,   nil,    81,
    22,    23,    99,    15,    16,    17,    18,    19,    20,    24,
    14,   nil,    21,    25,    26,    27,   nil,    81,    22,    23,
    80,    15,    16,    17,    18,    19,    20,    24,    14,   nil,
    21,    25,    26,    27,   nil,   nil,    22,    23,   nil,    15,
    16,    17,    18,    19,    20,    24,    14,   nil,    21,    25,
    26,    27,   nil,   nil,    22,    23,   nil,    15,    16,    17,
    18,    19,    20,    24,    14,   nil,    21,    25,    26,    27,
   nil,   nil,    22,    23,   nil,    15,    16,    17,    18,    19,
    20,    24,    14,   nil,    21,    25,    26,    27,   nil,   nil,
    22,    23,   nil,    15,    16,    17,    18,    19,    20,    24,
    14,   nil,    21,    25,    26,    27,   nil,   nil,    22,    23,
   nil,    15,    16,    17,    18,    19,    20,    24,    14,   nil,
    21,    25,    26,    27,   nil,   nil,    22,    23,   nil,    15,
    16,    17,    18,    19,    20,    24,    14,   nil,    21,    25,
    26,    27,   nil,   nil,    22,    23,   nil,    15,    16,    17,
    18,    19,    20,    24,    14,   nil,    21,    25,    26,    27,
   nil,   nil,    22,    23,   nil,    15,    16,    17,    18,    19,
    20,    24,    14,   nil,    21,    25,    26,    27,   nil,   nil,
    22,    23,   nil,    15,    16,    17,    18,    19,    20,    24,
    14,   nil,    21,    25,    26,    27,   nil,   nil,    22,    23,
   nil,    15,    16,    17,    18,    19,    20,    24,    14,   nil,
    21,    25,    26,    27,   nil,   nil,    22,    23,   nil,    15,
    16,    17,    18,    19,    20,    24,    14,   nil,    21,    25,
    26,    27,   nil,   nil,    22,    23,   nil,    15,    16,    17,
    18,    19,    20,    24,    14,   nil,    21,    25,    26,    27,
   nil,   nil,    22,    23,   nil,    15,    16,    17,    18,    19,
    20,    24,    14,   nil,    21,    25,    26,    27,   nil,   nil,
    22,    23,   nil,    15,    16,    17,    18,    19,    20,    24,
    14,   nil,    21,    25,    26,    27,   nil,   nil,    22,    23,
   nil,    15,    16,    17,    18,    19,    20,    24,    14,   nil,
    21,    25,    26,    27,   nil,   nil,    22,    23,   nil,    15,
    16,    17,    18,    19,    20,    24,    14,   nil,    21,    25,
    26,    27,   nil,   nil,    22,    23,   nil,    15,    16,    17,
    18,    19,    20,    24,    14,   nil,    21,    25,    26,    27,
   nil,   nil,    22,    23,   nil,    15,    16,    17,    18,    19,
    20,    24,    14,   nil,    21,    25,    26,    27,   nil,   nil,
    22,    23,   nil,    15,    16,    17,    18,    19,    20,    24,
    14,   nil,    21,    25,    26,    27,   nil,   nil,    22,    23,
   nil,    15,    16,    17,    18,    19,    20,    24,    14,   nil,
    21,    25,    26,    27,   nil,   nil,    22,    23,   nil,    15,
    16,    17,    18,    19,    20,    24,    14,   nil,    21,    25,
    26,    27,   nil,   nil,    22,    23,   nil,    15,    16,    17,
    18,    19,    20,    24,    14,   nil,    21,    25,    26,    27,
   nil,   nil,    22,    23,   nil,    15,    16,    17,    18,    19,
    20,    24,    14,   nil,    21,    25,    26,    27,   nil,   nil,
    22,    23,    30,    15,    16,    17,    18,    19,    20,    24,
    14,    32,    21,    43,    44,    41,    42,    37,    38,    39,
    40,    35,    36,    34,    33,    30,    30,    31,    14,    30,
    32,   nil,    43,    44,    32,   nil,    43,    44,    41,    42,
    37,    38,    39,    40,    35,    36,    34,    33,    30,    30,
    31,    31,    30,    30,    31,    30,   103,    97,   nil,   nil,
    94,    93,    32,   107,    43,    44,    41,    42,   nil,    32,
    30,    43,    44,    31,    31,   nil,   nil,    31,    31,    32,
    31,    43,    44,    41,    42,    37,    38,    39,    40,    35,
    36,    34,    33,   nil,    32,    31,    43,    44,    41,    42,
    37,    38,    39,    40,    35,    36,    34,    33,   nil,   nil,
   nil,    32,    69,    43,    44,    41,    42,    37,    38,    39,
    40,    35,    36,    34,    33,    32,   nil,    43,    44,    41,
    42,    37,    38,    39,    40,    35,    36,    34,    33,    32,
   nil,    43,    44,    41,    42,    37,    38,    39,    40,    35,
    36,    34,    33,    32,   nil,    43,    44,    41,    42,    37,
    38,    39,    40,    35,    36,    34,    33,    32,   nil,    43,
    44,    41,    42,    37,    38,    39,    40,    35,    36,    34,
    33,    32,   nil,    43,    44,    41,    42,    37,    38,    39,
    40,    35,    36,    34,    32,   nil,    43,    44,    41,    42,
    37,    38,    39,    40,    35,    36,    32,   nil,    43,    44,
    41,    42,    37,    38,    39,    40,    32,   nil,    43,    44,
    41,    42,    37,    38,    39,    40,    32,   nil,    43,    44,
    41,    42,    32,   nil,    43,    44,    41,    42,    32,   nil,
    43,    44,    41,    42 ]

racc_action_check = [
     1,    49,    35,    35,    35,    22,    48,    35,    35,     1,
    35,    35,    35,    35,    35,    35,    35,    82,    86,    35,
    82,    86,   104,    73,    23,    92,    49,    49,    96,    86,
   104,   102,   102,   102,     1,    35,   102,   102,    68,   102,
   102,   102,   102,   102,   102,   102,    86,   104,   102,    14,
    14,    14,    56,    96,    14,    14,    32,    14,    14,    14,
    14,    14,    14,    14,   102,    67,    14,   100,   100,   100,
    28,    20,   100,   100,    20,   100,   100,   100,   100,   100,
   100,   100,    14,    27,   100,    21,    21,    21,   nil,    89,
    21,    21,    89,    21,    21,    21,    21,    21,    21,    21,
   100,   nil,    21,    88,    88,    88,   nil,    70,    88,    88,
    70,    88,    88,    88,    88,    88,    88,    88,    21,   nil,
    88,    53,    53,    53,   nil,   nil,    53,    53,   nil,    53,
    53,    53,    53,    53,    53,    53,    88,   nil,    53,    25,
    25,    25,   nil,   nil,    25,    25,   nil,    25,    25,    25,
    25,    25,    25,    25,    53,   nil,    25,    26,    26,    26,
   nil,   nil,    26,    26,   nil,    26,    26,    26,    26,    26,
    26,    26,    25,   nil,    26,    81,    81,    81,   nil,   nil,
    81,    81,   nil,    81,    81,    81,    81,    81,    81,    81,
    26,   nil,    81,    79,    79,    79,   nil,   nil,    79,    79,
   nil,    79,    79,    79,    79,    79,    79,    79,    81,   nil,
    79,    29,    29,    29,   nil,   nil,    29,    29,   nil,    29,
    29,    29,    29,    29,    29,    29,    79,   nil,    29,    77,
    77,    77,   nil,   nil,    77,    77,   nil,    77,    77,    77,
    77,    77,    77,    77,    29,   nil,    77,    33,    33,    33,
   nil,   nil,    33,    33,   nil,    33,    33,    33,    33,    33,
    33,    33,    77,   nil,    33,    34,    34,    34,   nil,   nil,
    34,    34,   nil,    34,    34,    34,    34,    34,    34,    34,
    33,   nil,    34,     0,     0,     0,   nil,   nil,     0,     0,
   nil,     0,     0,     0,     0,     0,     0,     0,    34,   nil,
     0,    74,    74,    74,   nil,   nil,    74,    74,   nil,    74,
    74,    74,    74,    74,    74,    74,     0,   nil,    74,    37,
    37,    37,   nil,   nil,    37,    37,   nil,    37,    37,    37,
    37,    37,    37,    37,    74,   nil,    37,    38,    38,    38,
   nil,   nil,    38,    38,   nil,    38,    38,    38,    38,    38,
    38,    38,    37,   nil,    38,    39,    39,    39,   nil,   nil,
    39,    39,   nil,    39,    39,    39,    39,    39,    39,    39,
    38,   nil,    39,    40,    40,    40,   nil,   nil,    40,    40,
   nil,    40,    40,    40,    40,    40,    40,    40,    39,   nil,
    40,    41,    41,    41,   nil,   nil,    41,    41,   nil,    41,
    41,    41,    41,    41,    41,    41,    40,   nil,    41,    42,
    42,    42,   nil,   nil,    42,    42,   nil,    42,    42,    42,
    42,    42,    42,    42,    41,   nil,    42,    43,    43,    43,
   nil,   nil,    43,    43,   nil,    43,    43,    43,    43,    43,
    43,    43,    42,   nil,    43,    44,    44,    44,   nil,   nil,
    44,    44,   nil,    44,    44,    44,    44,    44,    44,    44,
    43,   nil,    44,    76,    76,    76,   nil,   nil,    76,    76,
   nil,    76,    76,    76,    76,    76,    76,    76,    44,   nil,
    76,    46,    46,    46,   nil,   nil,    46,    46,   nil,    46,
    46,    46,    46,    46,    46,    46,    76,   nil,    46,    47,
    47,    47,   nil,   nil,    47,    47,   nil,    47,    47,    47,
    47,    47,    47,    47,    46,   nil,    47,    75,    75,    75,
   nil,   nil,    75,    75,   nil,    75,    75,    75,    75,    75,
    75,    75,    47,   nil,    75,    36,    36,    36,   nil,   nil,
    36,    36,    78,    36,    36,    36,    36,    36,    36,    36,
    75,    78,    36,    78,    78,    78,    78,    78,    78,    78,
    78,    78,    78,    78,    78,    51,    91,    78,    36,    50,
    65,   nil,    65,    65,    51,   nil,    51,    51,    51,    51,
    51,    51,    51,    51,    51,    51,    51,    51,    98,    87,
    51,    91,    85,    84,    50,   105,    98,    87,   nil,   nil,
    85,    84,    63,   105,    63,    63,    63,    63,   nil,    66,
    52,    66,    66,    98,    87,   nil,   nil,    85,    84,    52,
   105,    52,    52,    52,    52,    52,    52,    52,    52,    52,
    52,    52,    52,   nil,    45,    52,    45,    45,    45,    45,
    45,    45,    45,    45,    45,    45,    45,    45,   nil,   nil,
   nil,    55,    45,    55,    55,    55,    55,    55,    55,    55,
    55,    55,    55,    55,    55,     2,   nil,     2,     2,     2,
     2,     2,     2,     2,     2,     2,     2,     2,     2,    71,
   nil,    71,    71,    71,    71,    71,    71,    71,    71,    71,
    71,    71,    71,    72,   nil,    72,    72,    72,    72,    72,
    72,    72,    72,    72,    72,    72,    72,    90,   nil,    90,
    90,    90,    90,    90,    90,    90,    90,    90,    90,    90,
    90,    57,   nil,    57,    57,    57,    57,    57,    57,    57,
    57,    57,    57,    57,    58,   nil,    58,    58,    58,    58,
    58,    58,    58,    58,    58,    58,    60,   nil,    60,    60,
    60,    60,    60,    60,    60,    60,    59,   nil,    59,    59,
    59,    59,    59,    59,    59,    59,    64,   nil,    64,    64,
    64,    64,    62,   nil,    62,    62,    62,    62,    61,   nil,
    61,    61,    61,    61 ]

racc_action_pointer = [
   281,     0,   647,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,    47,   nil,   nil,   nil,   nil,   nil,
    39,    83,   -10,     8,   nil,   137,   155,    78,    70,   209,
   nil,   nil,    41,   245,   263,     0,   533,   317,   335,   353,
   371,   389,   407,   425,   443,   616,   479,   497,   -12,    -8,
   560,   556,   601,   119,   nil,   633,    17,   703,   716,   738,
   728,   760,   754,   584,   748,   552,   591,    47,    20,   nil,
    74,   661,   675,     8,   299,   515,   461,   227,   533,   191,
   nil,   173,   -16,   nil,   584,   583,    12,   580,   101,    56,
   689,   557,    10,   nil,   nil,   nil,    19,   nil,   579,   nil,
    65,   nil,    29,   nil,    13,   586,   nil,   nil ]

racc_action_default = [
    -3,   -56,    -1,    -7,    -8,    -9,   -10,   -11,   -12,   -13,
   -14,   -15,   -16,   -17,   -56,   -19,   -20,   -21,   -22,   -23,
   -43,   -56,   -56,   -56,   -51,   -56,   -56,   -56,   -56,    -4,
    -5,    -6,   -56,   -56,   -56,   -56,   -56,   -56,   -56,   -56,
   -56,   -56,   -56,   -56,   -56,   -56,   -29,   -56,   -42,   -56,
   -56,   -56,   -56,   -56,   108,    -2,   -26,   -30,   -31,   -32,
   -33,   -34,   -35,   -36,   -37,   -38,   -39,   -40,   -41,   -18,
   -56,   -27,   -44,   -49,    -3,    -3,    -3,    -3,   -56,   -29,
   -24,   -56,   -56,   -47,   -56,   -56,   -56,   -56,    -3,   -56,
   -28,   -56,   -56,   -46,   -50,   -52,   -56,   -54,   -56,   -25,
    -3,   -48,    -3,   -55,   -56,   -56,   -45,   -53 ]

racc_goto_table = [
     1,    45,    70,    74,    75,    76,    77,    82,    48,   nil,
   nil,   nil,    51,    52,   nil,   nil,    55,   nil,   nil,   nil,
    57,    58,    59,    60,    61,    62,    63,    64,    65,    66,
    67,    68,    88,    71,    72,    89,   nil,   nil,   nil,   nil,
    78,   nil,   nil,   nil,   nil,   100,   nil,   nil,   nil,   nil,
   102,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,    71,   nil,    90,   nil,
   nil,   nil,   nil,   nil,    84,    85,    86,    87,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,    98,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   104,   nil,   105 ]

racc_goto_check = [
     1,     2,    15,     3,     3,     3,     3,    16,     2,   nil,
   nil,   nil,     2,     2,   nil,   nil,     2,   nil,   nil,   nil,
     2,     2,     2,     2,     2,     2,     2,     2,     2,     2,
     2,     2,     3,     2,     2,    15,   nil,   nil,   nil,   nil,
     2,   nil,   nil,   nil,   nil,     3,   nil,   nil,   nil,   nil,
     3,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,     2,   nil,     2,   nil,
   nil,   nil,   nil,   nil,     1,     1,     1,     1,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,     1,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
     1,   nil,     1 ]

racc_goto_pointer = [
   nil,     0,   -13,   -46,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   -44,   -66 ]

racc_goto_default = [
   nil,   nil,     2,    29,     3,     4,     5,     6,     7,     8,
     9,    10,    11,    12,    13,   nil,   nil ]

racc_reduce_table = [
  0, 0, :racc_error,
  1, 38, :_reduce_1,
  3, 38, :_reduce_2,
  0, 38, :_reduce_3,
  2, 38, :_reduce_4,
  1, 40, :_reduce_none,
  1, 40, :_reduce_none,
  1, 39, :_reduce_none,
  1, 39, :_reduce_none,
  1, 39, :_reduce_none,
  1, 39, :_reduce_none,
  1, 39, :_reduce_none,
  1, 39, :_reduce_none,
  1, 39, :_reduce_none,
  1, 39, :_reduce_none,
  1, 39, :_reduce_none,
  1, 39, :_reduce_none,
  1, 39, :_reduce_none,
  3, 39, :_reduce_18,
  1, 41, :_reduce_19,
  1, 41, :_reduce_20,
  1, 41, :_reduce_21,
  1, 41, :_reduce_22,
  1, 41, :_reduce_23,
  4, 42, :_reduce_24,
  6, 42, :_reduce_25,
  3, 42, :_reduce_26,
  1, 52, :_reduce_27,
  3, 52, :_reduce_28,
  0, 52, :_reduce_29,
  3, 43, :_reduce_30,
  3, 43, :_reduce_31,
  3, 43, :_reduce_32,
  3, 43, :_reduce_33,
  3, 43, :_reduce_34,
  3, 43, :_reduce_35,
  3, 43, :_reduce_36,
  3, 43, :_reduce_37,
  3, 43, :_reduce_38,
  3, 43, :_reduce_39,
  3, 43, :_reduce_40,
  3, 43, :_reduce_41,
  2, 43, :_reduce_42,
  1, 45, :_reduce_43,
  3, 46, :_reduce_44,
  8, 47, :_reduce_45,
  5, 47, :_reduce_46,
  1, 53, :_reduce_47,
  3, 53, :_reduce_48,
  0, 53, :_reduce_49,
  5, 48, :_reduce_50,
  1, 44, :_reduce_51,
  5, 49, :_reduce_52,
  8, 49, :_reduce_53,
  5, 50, :_reduce_54,
  6, 51, :_reduce_55 ]

racc_reduce_n = 56

racc_shift_n = 108

racc_token_table = {
  false => 0,
  :error => 1,
  :IRF => 2,
  :WHILE => 3,
  :VAIINDO => 4,
  :ATE => 5,
  :ERSE => 6,
  :DERF => 7,
  :CRASS => 8,
  :NEWLINE => 9,
  :NUMBER => 10,
  :STRING => 11,
  :TRUE => 12,
  :FARSE => 13,
  :NIR => 14,
  :IDENTIFIER => 15,
  :CONSTANT => 16,
  :ENRD => 17,
  "." => 18,
  "!" => 19,
  "*" => 20,
  "/" => 21,
  "+" => 22,
  "-" => 23,
  ">" => 24,
  "maioiguar" => 25,
  "<" => 26,
  "menoiguar" => 27,
  "iguar" => 28,
  "!=" => 29,
  "&&" => 30,
  "||" => 31,
  "=" => 32,
  "," => 33,
  ";" => 34,
  "(" => 35,
  ")" => 36 }

racc_nt_base = 37

racc_use_result_var = true

Racc_arg = [
  racc_action_table,
  racc_action_check,
  racc_action_default,
  racc_action_pointer,
  racc_goto_table,
  racc_goto_check,
  racc_goto_default,
  racc_goto_pointer,
  racc_nt_base,
  racc_reduce_table,
  racc_token_table,
  racc_shift_n,
  racc_reduce_n,
  racc_use_result_var ]

Racc_token_to_s_table = [
  "$end",
  "error",
  "IRF",
  "WHILE",
  "VAIINDO",
  "ATE",
  "ERSE",
  "DERF",
  "CRASS",
  "NEWLINE",
  "NUMBER",
  "STRING",
  "TRUE",
  "FARSE",
  "NIR",
  "IDENTIFIER",
  "CONSTANT",
  "ENRD",
  "\".\"",
  "\"!\"",
  "\"*\"",
  "\"/\"",
  "\"+\"",
  "\"-\"",
  "\">\"",
  "\"maioiguar\"",
  "\"<\"",
  "\"menoiguar\"",
  "\"iguar\"",
  "\"!=\"",
  "\"&&\"",
  "\"||\"",
  "\"=\"",
  "\",\"",
  "\";\"",
  "\"(\"",
  "\")\"",
  "$start",
  "Expressions",
  "Expression",
  "Terminator",
  "Literal",
  "Call",
  "Operator",
  "GetConstant",
  "GetLocal",
  "SetLocal",
  "Def",
  "Class",
  "If",
  "While",
  "Vaiindo",
  "Arguments",
  "Parameters" ]

Racc_debug_parser = false

##### State transition tables end #####

# reduce 0 omitted

module_eval(<<'.,.,', 'grammar.y', 38)
  def _reduce_1(val, _values, result)
     result = Nodes.new([ val[0] ]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'grammar.y', 39)
  def _reduce_2(val, _values, result)
     result = val[0] << val[2] 
    result
  end
.,.,

module_eval(<<'.,.,', 'grammar.y', 40)
  def _reduce_3(val, _values, result)
     result = Nodes.new([]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'grammar.y', 41)
  def _reduce_4(val, _values, result)
     result = val[0] 
    result
  end
.,.,

# reduce 5 omitted

# reduce 6 omitted

# reduce 7 omitted

# reduce 8 omitted

# reduce 9 omitted

# reduce 10 omitted

# reduce 11 omitted

# reduce 12 omitted

# reduce 13 omitted

# reduce 14 omitted

# reduce 15 omitted

# reduce 16 omitted

# reduce 17 omitted

module_eval(<<'.,.,', 'grammar.y', 61)
  def _reduce_18(val, _values, result)
     result = val[1] 
    result
  end
.,.,

module_eval(<<'.,.,', 'grammar.y', 65)
  def _reduce_19(val, _values, result)
     result = NumberNode.new(val[0]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'grammar.y', 66)
  def _reduce_20(val, _values, result)
     result = StringNode.new(val[0]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'grammar.y', 67)
  def _reduce_21(val, _values, result)
     result = TrueNode.new 
    result
  end
.,.,

module_eval(<<'.,.,', 'grammar.y', 68)
  def _reduce_22(val, _values, result)
     result = FalseNode.new 
    result
  end
.,.,

module_eval(<<'.,.,', 'grammar.y', 69)
  def _reduce_23(val, _values, result)
     result = NilNode.new 
    result
  end
.,.,

module_eval(<<'.,.,', 'grammar.y', 73)
  def _reduce_24(val, _values, result)
     result = CallNode.new(nil, val[0], val[2]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'grammar.y', 75)
  def _reduce_25(val, _values, result)
     result = CallNode.new(val[0], val[2], val[4]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'grammar.y', 76)
  def _reduce_26(val, _values, result)
     result = CallNode.new(val[0], val[2], []) 
    result
  end
.,.,

module_eval(<<'.,.,', 'grammar.y', 80)
  def _reduce_27(val, _values, result)
     result = [ val[0] ] 
    result
  end
.,.,

module_eval(<<'.,.,', 'grammar.y', 81)
  def _reduce_28(val, _values, result)
     result = val[0] << val[2] 
    result
  end
.,.,

module_eval(<<'.,.,', 'grammar.y', 82)
  def _reduce_29(val, _values, result)
     result = [] 
    result
  end
.,.,

module_eval(<<'.,.,', 'grammar.y', 86)
  def _reduce_30(val, _values, result)
     result = CallNode.new(val[0], val[1], [val[2]]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'grammar.y', 87)
  def _reduce_31(val, _values, result)
     result = CallNode.new(val[0], val[1], [val[2]]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'grammar.y', 88)
  def _reduce_32(val, _values, result)
     result = CallNode.new(val[0], val[1], [val[2]]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'grammar.y', 89)
  def _reduce_33(val, _values, result)
     result = CallNode.new(val[0], val[1], [val[2]]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'grammar.y', 90)
  def _reduce_34(val, _values, result)
     result = CallNode.new(val[0], val[1], [val[2]]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'grammar.y', 91)
  def _reduce_35(val, _values, result)
     result = CallNode.new(val[0], val[1], [val[2]]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'grammar.y', 92)
  def _reduce_36(val, _values, result)
     result = CallNode.new(val[0], val[1], [val[2]]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'grammar.y', 93)
  def _reduce_37(val, _values, result)
     result = CallNode.new(val[0], val[1], [val[2]]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'grammar.y', 94)
  def _reduce_38(val, _values, result)
     result = CallNode.new(val[0], val[1], [val[2]]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'grammar.y', 95)
  def _reduce_39(val, _values, result)
     result = CallNode.new(val[0], val[1], [val[2]]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'grammar.y', 96)
  def _reduce_40(val, _values, result)
     result = CallNode.new(val[0], val[1], [val[2]]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'grammar.y', 97)
  def _reduce_41(val, _values, result)
     result = CallNode.new(val[0], val[1], [val[2]]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'grammar.y', 98)
  def _reduce_42(val, _values, result)
     result = CallNode.new(val[1], val[0], []) 
    result
  end
.,.,

module_eval(<<'.,.,', 'grammar.y', 102)
  def _reduce_43(val, _values, result)
     result = GetLocalNode.new(val[0]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'grammar.y', 105)
  def _reduce_44(val, _values, result)
     result = SetLocalNode.new(val[0], val[2]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'grammar.y', 111)
  def _reduce_45(val, _values, result)
     result = DefNode.new(val[1], val[3], val[6]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'grammar.y', 114)
  def _reduce_46(val, _values, result)
     result = DefNode.new(val[1], [], val[3]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'grammar.y', 118)
  def _reduce_47(val, _values, result)
     result = [ val[0] ] 
    result
  end
.,.,

module_eval(<<'.,.,', 'grammar.y', 119)
  def _reduce_48(val, _values, result)
     result = val[0] << val[2] 
    result
  end
.,.,

module_eval(<<'.,.,', 'grammar.y', 120)
  def _reduce_49(val, _values, result)
     result = [] 
    result
  end
.,.,

module_eval(<<'.,.,', 'grammar.y', 126)
  def _reduce_50(val, _values, result)
     result = ClassNode.new(val[1], val[3]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'grammar.y', 130)
  def _reduce_51(val, _values, result)
     result = GetConstantNode.new(val[0]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'grammar.y', 136)
  def _reduce_52(val, _values, result)
     result = IfNode.new(val[1], val[3], nil) 
    result
  end
.,.,

module_eval(<<'.,.,', 'grammar.y', 141)
  def _reduce_53(val, _values, result)
     result = IfNode.new(val[1], val[3], val[6]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'grammar.y', 147)
  def _reduce_54(val, _values, result)
     result = WhileNode.new(val[1], val[3]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'grammar.y', 153)
  def _reduce_55(val, _values, result)
     result = VaiIndoNode.new(val[2], val[4]) 
    result
  end
.,.,

def _reduce_none(val, _values, result)
  val[0]
end

end   # class Parser
